<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="auditjs.security.bower" errors="0" tests="9" failures="2" package="test" id="" skipped="0"><testcase name="requirejs"/><testcase name="requirejs-plugins"/><testcase name="bootswatch-scss"/><testcase name="angular"><failure message="Found 21 vulnerabilities. See stacktrace for details.">Details:

                        [
  {
    "id": 8398799712,
    "title": "Cross Site Scripting (XSS) in ng-srcset",
    "description": "There is a security issue with ng-srcset; URIs aren't sanitized.\n\nThe behavior is correct for ng-src but not for ng-srcset. The problem is with src/ng/compile.js that it ignores srcset.",
    "versions": [
      "&lt;1.3.0-rc.3"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/angular/angular.js/pull/8975"
    ],
    "published": 1461913836000,
    "updated": 1461913836000
  },
  {
    "id": 8399952428,
    "title": "Injection Attack",
    "description": "AngularJS offers frontend developers a scope object that attempts to isolate global variables from the templating work-flow and keep things lean and \"Angular-only\". This makes sense - and to be fair, the AngularJS documentation explicitly states that the scope object is not considered to be a sandbox. And indeed it is none. With a simple JavaScript trick one can break out of this \"non-sandbox\" and execute arbitrary code in window and other host objects.",
    "versions": [
      "&lt;1.2.0"
    ],
    "references": [
      "https://code.google.com/p/mustache-security/wiki/AngularJS"
    ],
    "published": 1469724633582,
    "updated": 1469724633582
  },
  {
    "id": 8399952430,
    "title": "AngularJS Sandbox Bypass",
    "description": "The AngularJS sandbox can be bypassed, allowing the execution of arbitrary JavaScript from within the Angular scope.\n\n",
    "versions": [
      ">=1.2.19 &lt;1.2.24"
    ],
    "references": [
      "http://avlidienbrunn.se/angular.txt"
    ],
    "published": 1469724992880,
    "updated": 1469724992880
  },
  {
    "id": 8399952527,
    "title": "Code injection",
    "description": "There is a possible code injection made possible by allowing the passing of functions to Array.sort\n\n",
    "versions": [
      ">=1.2.19 &lt;1.2.19 || >1.3.0-beta.1 &lt;1.3.0-rc.1"
    ],
    "references": [
      "https://github.com/angular/angular.js/commit/b39e1d47b9a1b39a9fe34c847a81f589fba522f8"
    ],
    "published": 1469726525980,
    "updated": 1488751085765
  },
  {
    "id": 8399952528,
    "title": "Arbitrary code execution",
    "description": "Arbitrary code execution was possible under very specific conditions.",
    "versions": [
      ">1.3.0-beta.1 &lt;1.3.0-beta.14"
    ],
    "references": [
      "https://github.com/angular/angular.js/blob/b3b5015cb7919708ce179dc3d6f0d7d7f43ef621/CHANGELOG.md#1"
    ],
    "published": 1469727022098,
    "updated": 1469727022098
  },
  {
    "id": 8399952529,
    "title": "Angular Js Sandbox Bypass",
    "description": "The AngularJS sandbox can be bypassed, allowing the execution of arbitrary JavaScript from within the Angular scope.",
    "versions": [
      ">1.3.0-beta.1 &lt;1.3.0-rc.1"
    ],
    "references": [
      "http://avlidienbrunn.se/angular.txt#1"
    ],
    "published": 1469727288412,
    "updated": 1469727288412
  },
  {
    "id": 8399952530,
    "title": "[Duplicate] Code injection",
    "description": "See https://ossindex.net/resource/vulnerability/8399952527\n\nThere is a possible code injection made possible by allowing the passing of functions to Array.sort",
    "versions": [
      ">1.3.0-beta.1 &lt;1.3.0-rc.1"
    ],
    "references": [
      "https://github.com/angular/angular.js/commit/b39e1d47b9a1b39a9fe34c847a81f589fba522f8#1"
    ],
    "published": 1469727432563,
    "updated": 1488751115760
  },
  {
    "id": 8399952531,
    "title": "Expression sandbox bypass",
    "description": "These issues affect only applications with known server-side XSS holes that are also using CSP to secure their client-side code. ",
    "versions": [
      "&lt;1.3.2"
    ],
    "references": [
      "https://github.com/angular/angular.js/blob/master/CHANGELOG.md"
    ],
    "published": 1469727678032,
    "updated": 1469727678032
  },
  {
    "id": 8399952532,
    "title": "Possible security hold with usemap attribute",
    "description": "The attribute usemap has been blacklisted as it can be used as a security exploit.",
    "versions": [
      "&lt;1.5.0-rc.2"
    ],
    "references": [
      "https://github.com/angular/angular.js/blob/master/CHANGELOG.md#1"
    ],
    "published": 1469727878777,
    "updated": 1469727878777
  },
  {
    "id": 8399952533,
    "title": "UI Redress Attack Through Improper Sanitization Of SVG Elements",
    "description": "angular is susceptible to UI redress attacks. The vulnerability is due to the lack of proper sanitisation of an html input string by stripping all potentially dangerous tokens. So, an attacker can place svg elements outside of the containing element, leading to rendering it over other elements on the page (example: a login link).",
    "versions": [
      "&lt;1.5.0-beta.2"
    ],
    "references": [
      "https://github.com/angular/angular.js/commit/181fc567d873df065f1e84af7225deb70a8d2eb9",
      "https://github.com/angular/angular.js/pull/12524",
      "https://srcclr.com/security/ui-redress-attack-through-improper/javascript/s-2252"
    ],
    "published": 1469728183493,
    "updated": 1469728183493
  },
  {
    "id": 8399952534,
    "title": "Arbitrary Code Execution",
    "description": "SVG animations tags are not being sanitized properly, resulting in possible arbitrary code execution.",
    "versions": [
      "&lt;1.5.0-beta.2"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/78.html",
      "https://github.com/angular/angular.js/commit/67688d5ca00f6de4c7fe6084e2fa762a00d25610",
      "https://github.com/angular/angular.js/pull/11290",
      "https://snyk.io/vuln/npm:angular:20150310",
      "https://srcclr.com/security/arbitrary-code-execution-through-svg/javascript/s-2253"
    ],
    "published": 1469728274567,
    "updated": 1486325942923
  },
  {
    "id": 8401421233,
    "title": "Cross Site Scripting (XSS)",
    "description": "The linky filter is vulnerable to XSS due to its usage of the unsafeHTML filter.",
    "versions": [
      "&lt;0.9.1"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/angular/angular.js/issues/34"
    ],
    "published": 1479020626625,
    "updated": 1479020626625
  },
  {
    "id": 8402281289,
    "title": "Cross Site Scripting (XSS) when loaded from an extension",
    "description": "> Extension URIs (`resource://...`) bypass Content-Security-Policy in Chrome and Firefox and can always be loaded. Now if a site already has a XSS bug, and uses CSP to protect itself, but the user has an extension installed that uses Angular, an attacke[r] can load Angular from the extension, and Angular's auto-bootstrapping can be used to bypass the victim site's CSP protection.\n> \n> -- [github.com](https://github.com/angular/angular.js/pull/15346)",
    "versions": [
      ">=1.5.0 &lt;1.5.9"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/angular/angular.js/commit/0ff10e1b56c6b7c4ac465e35c96a5886e294bac5",
      "https://github.com/angular/angular.js/issues/15346",
      "https://github.com/angular/angular.js/pull/15346",
      "https://snyk.io/vuln/npm:angular:20161101"
    ],
    "published": 1483077559265,
    "updated": 1485951529425
  },
  {
    "id": 8402281303,
    "title": "Cross Site Scripting (XSS) through use elements referencing external SVG",
    "description": "> The use element can reference external svg's (same origin) and can include\nxlink javascript urls or foreign object that can execute xss.\n> \n> -- [github.com](https://github.com/angular/angular.js/pull/13453)",
    "versions": [
      "&lt;1.5.0"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/angular/angular.js/issues/13453"
    ],
    "published": 1483077792740,
    "updated": 1483078107273
  },
  {
    "id": 8402281308,
    "title": "Cross Site Scripting (XSS) in server rendered templates",
    "description": "> When rendering Angular templates with a server-side templating engine like ERB or Haml it is easy to introduce XSS vulnerabilities. These vulnerabilities are enabled by AngularJS evaluating user-provided strings containing interpolation symbols (default symbols are {{ and }}).\n> \n> -- [github.com](https://github.com/angular/angular.js/issues/5601)\n",
    "versions": [
      "&lt;1.3.0-beta.10"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/angular/angular.js/commit/e3f78c17d3b5d3a714402d7314094aabe7f6512a",
      "https://github.com/angular/angular.js/issues/5601",
      "https://github.com/angular/angular.js/issues/7496",
      "https://github.com/angular/angular.js/pull/7517"
    ],
    "published": 1483079492842,
    "updated": 1487735883745
  },
  {
    "id": 8402384749,
    "title": "Arbitrary Script Injection",
    "description": "> Affected versions of the package are vulnerable to Arbitrary Script Injection due to improper sanitization of the $event object passed to the native constructor functions. That isn't protected by the fast paths in $parse.\n> \n> -- [snyk.io](https://snyk.io/vuln/npm:angular:20130625)",
    "versions": [
      "&lt;1.1.5"
    ],
    "references": [
      "https://github.com/angular/angular.js/commit/5349b20097dc5cdff0216ee219ac5f6e6ef8c219",
      "https://snyk.io/vuln/npm:angular:20130625"
    ],
    "published": 1485898437785,
    "updated": 1485931001681
  },
  {
    "id": 8402384750,
    "title": "Protection Bypass",
    "description": "> Affected versions of the package are vulnerable to Protection Bypass via ng-attr-action and ng-attr-srcdoc allowing binding to Javascript. The fix was to require bindings to form[action] to be $sce.RESOURCE_URL and bindings to iframe[srcdoc] to be $sce.HTML.\n> \n> -- [snyk.io](https://snyk.io/vuln/npm:angular:20131113)",
    "versions": [
      "&lt;1.2.2"
    ],
    "references": [
      "https://code.google.com/archive/p/mustache-security/wikis/AngularJS.wiki#The_State_of_AngularJS_1.2.x",
      "https://github.com/angular/angular.js/issues/4927",
      "https://github.com/angular/angular.js/pull/4933",
      "https://snyk.io/vuln/npm:angular:20131113"
    ],
    "published": 1485898650185,
    "updated": 1485931061224
  },
  {
    "id": 8402384751,
    "title": "Arbitrary Command Execution",
    "description": "> Affected versions of the package are vulnerable to Arbitrary Command Injection due to the assignment functions accessing constructors functions, allowing attackers to execute their malicious code.\n> \n> -- [snyk.io](https://snyk.io/vuln/npm:angular:20141104)",
    "versions": [
      "&lt;1.3.2"
    ],
    "references": [
      "https://github.com/angular/angular.js/blob/master/CHANGELOG.md#132-cardiovasculatory-magnification-2014-11-07",
      "https://github.com/angular/angular.js/commit/e676d642f5feb8d3ba88944634afb479ba525c36",
      "https://snyk.io/vuln/npm:angular:20141104"
    ],
    "published": 1485899769856,
    "updated": 1485931112623
  },
  {
    "id": 8402384794,
    "title": "Cross-site Scripting (XSS)",
    "description": "> Affected versions of the package are vulnerable to Cross-site Scripting (XSS) due to no proper sanitization of xlink:href attributes.\n> \n> -- [snyk.io](https://snyk.io/vuln/npm:angular:20150807)",
    "versions": [
      "&lt;1.5.0-beta.0 >=1.0.0"
    ],
    "references": [
      "https://github.com/angular/angular.js/commit/f33ce173c90736e349cf594df717ae3ee41e0f7a",
      "https://github.com/angular/angular.js/pull/12524",
      "https://snyk.io/vuln/npm:angular:20150807"
    ],
    "published": 1485900514365,
    "updated": 1485931408807
  },
  {
    "id": 8402384796,
    "title": "Cross-site Scripting (XSS)",
    "description": "> Affected versions of the package are vulnerable to Mutation Cross-site Scripting (mXSS).\n> \n> -- [snyk.io](https://snyk.io/vuln/npm:angular:20150909)",
    "versions": [
      "&lt;1.5.0-beta.2"
    ],
    "references": [
      "https://github.com/angular/angular.js/commit/bc0d8c4eea9a34bff5e29dd492dcdd668251be40",
      "https://github.com/angular/angular.js/pull/12524",
      "https://snyk.io/vuln/npm:angular:20150909"
    ],
    "published": 1485901294649,
    "updated": 1485931425201
  },
  {
    "id": 8402385510,
    "title": "Cross-site Scripting (XSS)",
    "description": ">  Affected versions of the package are vulnerable to Cross-site Scripting (XSS) attacks involving assignment on constructor properties.\n> \n> -- [snyk](https://snyk.io/vuln/npm:angular:20151130)",
    "versions": [
      "&lt;1.4.10"
    ],
    "references": [
      "https://github.com/angular/angular.js/commit/5a674f3bb9d1118d11b333e3b966c01a571c09e6",
      "https://github.com/angular/angular.js/pull/13417",
      "https://snyk.io/vuln/npm:angular:20151130"
    ],
    "published": 1485949862562,
    "updated": 1485964583864
  }
]

</failure></testcase><testcase name="angular-route"/><testcase name="angular-mocks"/><testcase name="angular-sanitize"/><testcase name="jquery"><failure message="Found 7 vulnerabilities. See stacktrace for details.">Details:

                        [
  {
    "id": 323345,
    "title": "[CVE-2007-2379] The jQuery framework exchanges data using JavaScript Object Notation (JSON) with...",
    "description": "The jQuery framework exchanges data using JavaScript Object Notation (JSON) without an associated protection scheme, which allows remote attackers to obtain the data via a web page that retrieves the data through a URL in the SRC attribute of a SCRIPT element and captures the data using other JavaScript code, aka \"JavaScript Hijacking.\"",
    "versions": [
      ""
    ],
    "references": [
      "http://cve.mitre.org/cgi-bin/cvename.cgi?name=2007-2379",
      "http://osvdb.org/43320",
      "http://www.cvedetails.com/cve-details.php?t=1&amp;cve_id=CVE-2007-2379",
      "http://www.fortifysoftware.com/servlet/downloads/public/JavaScript_Hijacking.pdf",
      "https://web.nvd.nist.gov/view/vuln/detail?vulnId=2007-2379"
    ],
    "cve": "CVE-2007-2379",
    "published": 1177975140000,
    "updated": 1482458184363
  },
  {
    "id": 348528,
    "title": "[CVE-2011-4969]  Improper Neutralization of Input During Web Page Generation (\"Cross-site Scripting\")",
    "description": "Cross-site scripting (XSS) vulnerability in jQuery before 1.6.3, when using location.hash to select elements, allows remote attackers to inject arbitrary web script or HTML via a crafted tag.",
    "versions": [
      "1.6",
      "1.6.1",
      "1.6.2"
    ],
    "references": [
      "http://blog.jquery.com/2011/09/01/jquery-1-6-3-released/",
      "http://blog.mindedsecurity.com/2011/07/jquery-is-sink.html",
      "http://bugs.jquery.com/ticket/9521",
      "http://cve.mitre.org/cgi-bin/cvename.cgi?name=2011-4969",
      "http://www.cvedetails.com/cve-details.php?t=1&amp;cve_id=CVE-2011-4969",
      "http://www.openwall.com/lists/oss-security/2013/01/31/3",
      "http://www.osvdb.org/80056",
      "http://www.securityfocus.com/bid/58458",
      "http://www.securitytracker.com/id/1036620",
      "http://www.ubuntu.com/usn/USN-1722-1",
      "https://github.com/jquery/jquery/commit/db9e023e62c1ff5d8f21ed9868ab6878da2005e9",
      "https://h20565.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05111017",
      "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05111017",
      "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05158380",
      "https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05232730",
      "https://web.nvd.nist.gov/view/vuln/detail?vulnId=2011-4969"
    ],
    "cve": "CVE-2011-4969",
    "published": 1362783301050,
    "updated": 1482458184364
  },
  {
    "id": 8397111713,
    "title": "Selector interpreted as HTML",
    "description": "> `jQuery( strInput )` cannot reliably differentiate selectors from HTML.\n> ...\n> Looking for \"&lt;\" past the first character creates vulnerabilities and confusing behavior on complex input.\n> \n> -- [jquery.com](https://bugs.jquery.com/ticket/11290)",
    "versions": [
      "&lt;1.9.0"
    ],
    "references": [
      "http://bugs.jquery.com/ticket/11290",
      "https://cwe.mitre.org/data/definitions/79.html"
    ],
    "published": 0,
    "updated": 1488054141027
  },
  {
    "id": 8399962417,
    "title": "Cross Site Scripting (XSS)",
    "description": "Requests to third-party resources with a text/javascript response type are automatically evaluated, which can result in the execution of arbitrary code.",
    "versions": [
      ">1.4.0 &lt;1.12.0 || >1.12.3 &lt;3.0.0-beta1"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/jquery/jquery/issues/2432",
      "https://github.com/jquery/jquery/pull/2588",
      "https://snyk.io/vuln/npm:jquery:20150627"
    ],
    "published": 1470469775500,
    "updated": 1488662498278
  },
  {
    "id": 8399962418,
    "title": "[Duplicate] Cross Site Scripting (XSS)",
    "description": "See https://ossindex.net/resource/vulnerability/8399962417\n\nRequests to third-party resources with a text/javascript response type are automatically evaluated, which can result in the execution of arbitrary code.",
    "versions": [
      ">1.12.3 &lt;3.0.0-beta1"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/jquery/jquery/issues/2432#2",
      "https://github.com/jquery/jquery/pull/2588",
      "https://snyk.io/vuln/npm:jquery:20150627#2"
    ],
    "published": 1470469923962,
    "updated": 1488662505236
  },
  {
    "id": 8400152728,
    "title": "Cross Site Scripting (XSS) in parseHTML",
    "description": "> Scripts passed in event attributes are executed in parseHTML immediately, without any possibility for the user to intervene\n> \n> -- [github.com](https://github.com/jquery/jquery/pull/1505)",
    "versions": [
      "&lt;3.0.0"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/79.html",
      "https://github.com/jquery/jquery/issues/1505"
    ],
    "published": 1474177702003,
    "updated": 1488055351698
  },
  {
    "id": 8402280502,
    "title": "Denial of Service",
    "description": "> Affected versions of the package are vulnerable to Denial of Service (DoS) due to removing a logic that lowercased attribute names.\n> \n> -- [snyk.io](https://snyk.io/vuln/npm:jquery:20160529)",
    "versions": [
      "&lt;3.0.0 >=2.1.0-beta1"
    ],
    "references": [
      "https://github.com/jquery/jquery/issues/3133",
      "https://github.com/jquery/jquery/pull/3134",
      "https://jsfiddle.net/shnann6y/2/",
      "https://snyk.io/vuln/npm:jquery:20160529"
    ],
    "published": 1483016300066,
    "updated": 1485038199164
  }
]

</failure></testcase><testcase name="moment"/></testsuite>